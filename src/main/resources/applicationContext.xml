<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	 http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	  http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-4.3.xsd
	  http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
	">
    <!--spring容器: 提供创建管理对象-->
	<!--spring容器：提供创建管理对象-->
	<!--spring整合mybatis-->
	<!--1、定义数据源：定义连接的数据配置-->
	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/mydb?useUnicode=true&amp;characterEncoding=utf-8"/>
		<property name="username" value="root"/>
		<property name="password" value=""/>
	</bean>-->

	<bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverClass}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>


	<!--2、定义sqlSession工厂-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--引用数据源-->
		<property name="dataSource" ref="dataSource"></property>
		<!--读取mybatis的配置-->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!--spring整合dao层，动态生成dao成接口实现类的对象
	  注意:1. sql映射的命名空间必需是接口的限定名，持久化操作的id值必需和接口方法中相同
	      2. 动态生成实现类的bean对象id值，就是接口名称首字母小写
	-->
	<bean id="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--引入sqlSessionFatory工厂-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!--扫描dao层接口，动态生成实现类的对象-->
		<property name="basePackage" value="com.team.mapper"></property>
	</bean>


	<context:component-scan base-package="com.team.service.impl"></context:component-scan>
</beans>

